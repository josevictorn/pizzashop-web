/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AboutIndexRouteImport } from './pages/about/index'
import { Route as HomeIndexRouteImport } from './pages/_home/index'
import { Route as AboutNameIndexRouteImport } from './pages/about/$name/index'

const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutNameIndexRoute = AboutNameIndexRouteImport.update({
  id: '/about/$name/',
  path: '/about/$name/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof HomeIndexRoute
  '/about': typeof AboutIndexRoute
  '/about/$name': typeof AboutNameIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof HomeIndexRoute
  '/about': typeof AboutIndexRoute
  '/about/$name': typeof AboutNameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home/': typeof HomeIndexRoute
  '/about/': typeof AboutIndexRoute
  '/about/$name/': typeof AboutNameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/about/$name'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/about/$name'
  id: '__root__' | '/_home/' | '/about/' | '/about/$name/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  AboutNameIndexRoute: typeof AboutNameIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/$name/': {
      id: '/about/$name/'
      path: '/about/$name'
      fullPath: '/about/$name'
      preLoaderRoute: typeof AboutNameIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  AboutNameIndexRoute: AboutNameIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
