/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthLayoutRouteImport } from './pages/_auth/layout'
import { Route as AppLayoutRouteImport } from './pages/_app/layout'
import { Route as AuthSignUpIndexRouteImport } from './pages/_auth/sign-up/index'
import { Route as AuthSignInIndexRouteImport } from './pages/_auth/sign-in/index'

const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpIndexRoute = AuthSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthSignInIndexRoute = AuthSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof AuthSignInIndexRoute
  '/sign-up': typeof AuthSignUpIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthSignInIndexRoute
  '/sign-up': typeof AuthSignUpIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppLayoutRoute
  '/_auth': typeof AuthLayoutRouteWithChildren
  '/_auth/sign-in/': typeof AuthSignInIndexRoute
  '/_auth/sign-up/': typeof AuthSignUpIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-up'
  id: '__root__' | '/_app' | '/_auth' | '/_auth/sign-in/' | '/_auth/sign-up/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRoute
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/sign-up/': {
      id: '/_auth/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/sign-in/': {
      id: '/_auth/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInIndexRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
  }
}

interface AuthLayoutRouteChildren {
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRoute,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
